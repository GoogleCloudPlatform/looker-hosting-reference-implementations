# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
###
# Use this alternative template to deploy regular + scheduler-only nodes.
###
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: looker-clustered
  labels:
    app: looker-clustered
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  replicas: 2
  selector:
    matchLabels:
      app: looker-clustered
  template:
    metadata:
      labels:
        app: looker-clustered
    spec:
      initContainers:
        - name: looker-data-ownership-grant
          image: gcr.io/google-containers/busybox:latest
          command: ['sh', '-c', 'chown -R 9999:9999 /mnt/lookerfiles']
          volumeMounts:
            - name: lookerfiles
              mountPath: /mnt/lookerfiles
      containers:
        - name: looker-clustered-instance
          image: gcr.io/gcp-project/looker:21.4
          imagePullPolicy: Always
          securityContext:
            runAsUser: 9999
            runAsGroup: 9999
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - name: looker-web
              containerPort: 9999
              protocol: TCP
            - name: looker-api
              containerPort: 19999
              protocol: TCP
          readinessProbe:
            httpGet:
              port: 9999
              scheme: "HTTPS"
              path: "/alive"
            successThreshold: 2
            initialDelaySeconds: 90
            periodSeconds: 5
          livenessProbe:
            httpGet:
              port: 9999
              scheme: "HTTPS"
              path: "/availability?mode=pod-liveness"
            initialDelaySeconds: 120
            periodSeconds: 30
          volumeMounts:
            - name: looker-startup
              mountPath: /app/lookerstart.cfg
              subPath: lookerstart.cfg
            - name: jmx-prom-config
              mountPath: /app/jmx-prom-config.yaml
              subPath: jmx-prom-config.yaml
            - name: lookerfiles
              mountPath: /mnt/lookerfiles
      securityContext:
        fsGroup: 9999
      volumes:
        - name: lookerfiles
          persistentVolumeClaim:
            claimName: fileserver-claim
            readOnly: false
        - name: looker-startup
          configMap:
            defaultMode: 420
            name: looker-startup-options-noschedule
            items:
              - key: lookerstart.cfg
                path: lookerstart.cfg
        - name: jmx-prom-config
          configMap:
            defaultMode: 420
            name: jmx-prom-config
            items:
              - key: jmx-prom-config.yaml
                path: jmx-prom-config.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: looker-clustered-scheduler-nodes
  labels:
    app: looker-clustered-scheduler-nodes
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  replicas: 2
  selector:
    matchLabels:
      app: looker-clustered-scheduler-nodes
  template:
    metadata:
      labels:
        app: looker-clustered-scheduler-nodes
    spec:
      initContainers:
        - name: looker-data-ownership-grant
          image: gcr.io/google-containers/busybox:latest
          command: ['sh', '-c', 'chown -R 9999:9999 /mnt/lookerfiles']
          volumeMounts:
            - name: lookerfiles
              mountPath: /mnt/lookerfiles
      containers:
        - name: looker-clustered-instance
          image: gcr.io/gcp-project/looker:21.4
          imagePullPolicy: Always
          securityContext:
            runAsUser: 9999
            runAsGroup: 9999
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - name: looker-web
              containerPort: 9999
              protocol: TCP
            - name: looker-api
              containerPort: 19999
              protocol: TCP
          readinessProbe:
            httpGet:
              port: 9999
              scheme: "HTTPS"
              path: "/alive"
            successThreshold: 2
            initialDelaySeconds: 90
            periodSeconds: 5
          livenessProbe:
            httpGet:
              port: 9999
              scheme: "HTTPS"
              path: "/availability?mode=pod-liveness"
            initialDelaySeconds: 120
            periodSeconds: 30
          volumeMounts:
            - name: looker-startup
              mountPath: /app/lookerstart.cfg
              subPath: lookerstart.cfg
            - name: jmx-prom-config
              mountPath: /app/jmx-prom-config.yaml
              subPath: jmx-prom-config.yaml
            - name: lookerfiles
              mountPath: /mnt/lookerfiles
      securityContext:
        fsGroup: 9999
      volumes:
        - name: lookerfiles
          persistentVolumeClaim:
            claimName: fileserver-claim
            readOnly: false
        - name: looker-startup
          configMap:
            defaultMode: 420
            name: looker-startup-options
            items:
              - key: lookerstart.cfg
                path: lookerstart.cfg
        - name: jmx-prom-config
          configMap:
            defaultMode: 420
            name: jmx-prom-config
            items:
              - key: jmx-prom-config.yaml
                path: jmx-prom-config.yaml
